•τ∈
s.3
C
dk
1 
t ∨Bad1/2
s is 1−
2
; a 
• Common Prefix (CP); with parameters k ∈ N. The chains C1, C2 possessed by two
honest parties at the onset of the slots sl1 < sl2 are such that C
dk
1  C2, where C
dk
1 denotes
the chain obtained by removing the last k blocks from C1, and  denotes the prefix relation.
• Chain Quality (CQ); with parameters µ ∈ (0, 1] and ` ∈ N. Consider any portion of
length at least ` of the chain possessed by an honest party at the onset of a round; the ratio of
• τ ∈ 
blocks originating from the adversary is at most 1−µ. We call µ the chain quality coefficient.
• Chain Growth (CG); with parameters τ ∈ (0, 1], s ∈ N. Consider the chains C1, C2
possessed by two honest parties at the onset of two slots sl1, sl2 with sl2 at least s slots ahead
of sl1. Then it holds that len(C2) − len(C1) ≥ τ · s. We call τ the speed coefficien
t the model introduced by [24] for analysing security of blockchain
protocols enhanced with an ideal functionality F. We denote by VIEWP,F
Π,A,Z
(λ) the view of party
P after the execution of protocol Π with adversary A, environment Z, security parameter κ and
access to ideal functionality F. Similarly we denote by EXECP,F
Π,A,Z
(λ) the output of Z.
We note that multiple different “functionalities” will be encompassed by F. Contrary to [24],
our analysis is in the “standard model”, and without a random oracle functionality. The first interfaces we incorporate in the ideal functionality used in the protocol are the “diffuse” and “key and
transaction” functionality, denoted FD+KT a
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].
delegation mechanism can enable stakeholders to delegate their “voting rights”, i.e., the right
of participating in the committees running the leader selection protocol in each epoch. As in
liquid democracy, (a.k.a. delegative democracy [23]), stakeholders have the ability to revoke their
delegative appointment when they wish independently of each other.
Given our model and protocol description we also explore how various attacks considered in
practice can be addressed within our framework. Specifically, we discuss double spending attacks,
transaction denial attacks, 51% attacks, nothing-at-stake, desynchronization attacks and others.
Finally, we present evidence regarding the efficiency of our design. First we consider double spending
attacks. For illustrative purposes, we perform a comparison with Nakamoto’s analysis for bitcoin
regarding transaction confirmation time with assurance 99.9%. Against covert adversaries, the
transaction confirmation time is from 10 to 16 times faster than that of bitcoin, depending on the
adversarial hashing power; for general adversaries confirmation time is from 5 to 10 times faster.
Moreover, our concrete analysis of double-spending attacks relies on our combinatorial analysis of
forkable and covertly forkable strings and applies to a much broader class of adversarial behavior
than Nakamoto’s more simplified analysis.3 We then survey our prototype implementation and
report on benchmark experiments run in the Amazon cloud that showcase the power of our proof
of stake blockchain protocol in terms of performance.
Related Work. In parallel to the development of Ouroboros, a number of other protocols were
developed targeting various positions in the design space of distributed ledgers based on PoS.
Sleepy consensus [6] considers a fixed stakeholder distribution (i.e., stake does not evolve over
time) and targets a “mixed” corruption setting, where the adversary is allowed to be adaptive as
well as perform fail-stop and recover corruptions in addition to Byzantine faults. It is actually
straightforward to extend our analysis in this mixed corruption setting, cf. Remark 2; nevertheless,
the resulting security can be argued only in the “corruptions with delay” setting, and thus is
not fully adaptive. Snow White [7] addresses an evolving stakeholder distribution and uses a
corruption delay mechanism similar to ours for arguing security. Nevertheless, contrary to our
protocol, the Snow White design is susceptible to a “grinding” type of attack that can bias high
probability events in favor of the adversary. While this does not hurt security asymptotically, it
prevents a concrete parameterisation that does not take into account adversarial computing power.
Algorand [27] provides a distributed ledger following a Byzantine agreement per block approach
that can withstand adaptive corruptions. Given that agreement needs to be reached for each block,
such protocols will produce blocks at a rate substantially slower than a PoS blockchain (where the
slow down matches the expected length of the execution of the Byzantine agreement protocol) but
they are free of forks. In this respect, despite the existence of forks, blockchain protocols exhibit
the flexibility of permitting the clients to set the level of risk that they are willing to undertake,
allowing low risk profile clients to enjoy faster processing times in the optimistic sense. Finally,
Fruitchain [36] provides a reward mechanism and an approximate Nash equilibrium proof for a
PoW-based blockchain. We use a similar reward mechanism at the blockchain level, nevertheless
our underlying mechanics are different since we have to operate in a PoS setting. The core of the
idea is to provide a PoS analogue of “endorsing” inputs in a fair proportion using the same logic as
the PoW-based byzantine agreement protocol for honest majority from [24].